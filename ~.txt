1) Создать папку проекта instagram
2) Создать docker-compose.yml в нем
3) Настроить файл чтобы запускался контейнер posgreSQL  - instagramDB
4) По пробовать подключиться к нему через Extension в VSCode

------------------------------------
Cmd
docker --version

Termnal vsc (node) (лежит по D:\!nodejs\instagram.com)
docker-compose up --build (--build в первый раз используется при скачивании далее не нужно)
docker-compose up (+ по умолчанию запускает docker-compose.yml)
npm init 
npm i express
node server.js
npm start
npm run dev
npm i nodemon -g (глобально устанавливается)
npm i nodemon (локально)
npm i morgan (можно видеть различные логи)
npm i multer (для того чтобы файлы загружать)
...
npm install sequelize pg pg-hstore
npm i sequelize-cli
npm i sequelize-cli -g
npx sequelize-cli migration:generate --name create-company
npx sequelize-cli migration:generate --name create-role
npx sequelize-cli migration:generate --name create-user
npx sequelize-cli db:migrate
npx sequelize-cli migration:generate --name create-auth-code
npx sequelize-cli db:migrate:undo:all
npm install nodemailer
npx sequelize-cli db:seed --seed seedRole.js
-
npm i passport jsonwebtoken
npm i passport-jwt

Termnal vsc(bash) (Git)
git init 
	.gitignore node_modules 
git add .
git commit -m "initial"
git remote add origin https://github.com/ivannikovmn/20230503b-Decode-Instagram
	p.s git branch --move master main - переименовать master в main в visual code 
git push origin main
---
git remote add origin https://github.com/ivannikovmn/20230621a-Decode-Instagram
---
git add .
git commit -m "add RestAPI l-4 (user registration)"
git push origin main
---
git add .
git commit -m "add RestAPI l-5 (user authorization)"
git push origin main

