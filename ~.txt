1) Создать папку проекта instagram
2) Создать docker-compose.yml в нем
3) Настроить файл чтобы запускался контейнер posgreSQL  - instagramDB
4) По пробовать подключиться к нему через Extension в VSCode
---
1. Сделать функционал регистрация, входа и выхода +
2. Сделать функционал добавления +,  редактирования и удаление блогов(постов, сторис) +
---
1. Реализовать функционал регистрации пользователя в инстаграм. +
2. Реализовать функционал Авторизации через логин и пароль в инстаграм +
3. Реализовать функционал добавления поста в инстаграм +
4. Создать API для получения списка всех своих(авторизованного пользователя) постов +
5. Создать API для получения списка всех постов +
6. Создать API для получения одного поста по ID +
7. Создать API для удаления поста по ID +
8. Создать API для редактирования поста +
9. Создать API для редактирования данных пользователя, кроме пароля +
10. Создать API для добавления сторис +
11. Создать API для удаления сторис +
12. Создать API для получения списка сторис по пользователю за последние 24 часа +
13. Создать API для добавления комментариев для постов +
14. Создать API для удаления комментариев +
15. Создать API для получения списка комментариев по ID поста +
16. Реализовать функционал подписки и отписки от пользователей +
17. Создать API для получения списка постов по username пользователя (/api/posts/byUsername/:username) +
18. API для получения списка подписчиков на пользователя по username +
19. API для получения списка пользователей на кого подписан пользователь по username +
20. API для получения детальной информации о пользователе по username +
21. Разработать API для создания и удаление лайков на пост, сторис, коммент (создание/удаление лайка для поста/сторис) +
22. Бонус: +
	Бонусный сложный алгоритм написать API который будет возвращать список Suggestions (предложение)
	Логика должна находить максимум 5 рекомендаций
	В список рекомедации добавлять последние 5 человек на которых подписывались те на кого подписанны вы или ваши подпсичики. 
	(вы - это /:userId, лимит 1чел, т.к в базе сейчас всего 3 пользователя => возможны 2 подписки) +


https://docs.google.com/document/d/1y_5n4ELZWvgtChaTtv3SdYCkY0JyaFYj7qV8BoQbdZQ/edit?usp=sharing
------------------------------------
Cmd
docker --version

-- в win 2019 сервер когда не работает докер и после обновления системы
--- сmd 
---- попробовать Docker Desktop запустить
---- bcdedit /enum
---- bcdedit /set hypervisorlaunchtype auto
---- перезагрузка

Termnal vsc (node) (лежит по D:\!nodejs\instagram.com)
docker-compose up --build (--build в первый раз используется при скачивании далее не нужно)
docker-compose up (+ по умолчанию запускает docker-compose.yml)
npm init 
npm i express
node server.js
npm start
npm run dev
npm i nodemon -g (глобально устанавливается)
npm i nodemon (локально)
npm i morgan (можно видеть различные логи)
npm i multer (для того чтобы файлы загружать)
...
npm install sequelize pg pg-hstore
npm i sequelize-cli
npm i sequelize-cli -g
npx sequelize-cli migration:generate --name create-company
npx sequelize-cli migration:generate --name create-role
npx sequelize-cli migration:generate --name create-user
npx sequelize-cli db:migrate
npx sequelize-cli migration:generate --name create-auth-code
npx sequelize-cli db:migrate:undo:all
npm install nodemailer
npx sequelize-cli db:seed --seed seedRole.js
-
npm i passport jsonwebtoken
npm i passport-jwt
--- l-6
npx sequelize-cli migration:generate --name create-country
npx sequelize-cli migration:generate --name create-city
npx sequelize-cli db:migrate
npx sequelize-cli seed:generate --name seed_countries
npx sequelize-cli seed:generate --name seed_cities
npx sequelize-cli db:seed --seed 20230714134707-seed_countries.js
npx sequelize-cli db:seed --seed 20230714134813-seed_cities.js
-
npx sequelize-cli migration:generate --name create-participant
npx sequelize-cli seed:generate --name seed_participants
npx sequelize-cli db:seed --seed 20230717073500-seed_participants.js
--- l-7
npx sequelize-cli migration:generate --name create-resume
--- l-14
npx sequelize-cli migration:generate --name create-like-model
npx sequelize-cli migration:generate --name create-follower
npx sequelize-cli migration:generate --name create-comment-model
---l16
https://cloud.digitalocean.com/welcome?i=297482
https://cloud.digitalocean.com/projects/96c36959-1b1a-4d41-a202-ee60a271da1b/resources?i=297482
dbaas-db-4574312 > db-postgresql-sgp1-45559
https://cloud.digitalocean.com/droplets?i=297482
ubuntu-s-2vcpu-4gb-120gb-in
-
ssh root@206.189.84.19
ls
cd ../
cd usr/
usr
cd ../home
cd
pwd
cd root
https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
	source ~/.bashrc
	nvm install v18.17.0
git init
git clone https://github.com/ivannikovmn/20230621b-Decode-Instagram.git
cd 20230621b-Decode-Instagram/
npm i
	npm start
npm run prod_localserver_windows
Чтобы заработала на ubuntu нужно:
	rm -rf node_modules
	rm package-lock.json

---восстановление 
docker-compose up
npx sequelize-cli db:migrate
npx sequelize-cli db:seed:all
npm run dev

Termnal vsc(bash) (Git)
git init 
	.gitignore node_modules 
git add .
git commit -m "initial"
git remote add origin https://github.com/ivannikovmn/20230503b-Decode-Instagram
	p.s git branch --move master main - переименовать master в main в visual code 
git push origin main
---
git remote add origin https://github.com/ivannikovmn/20230621a-Decode-Instagram
---
git add .
git commit -m "add RestAPI l-4 (user registration)"
git push origin main
---
git add .
git commit -m "add RestAPI l-5 (user authorization)"
git push origin main
-
git add .
git commit -m "add RestAPI l-6 (region [country, city], participants, followers)"
git push origin main
-
git add .
git commit -m "add RestAPI l-7 (add resume [models and migrations])"
git push origin main
---
git add .
git commit -m "add RestAPI l-8 (add resume [create], fix [delete followers])"
git push origin main
---
git add .
git commit -m "add RestAPI l-9 (resume: p1 list, p2 delete, p3 edit)"
git push origin main
---
git add .
git commit -m "add edit user, create/list[before24hours]/delete story"
git push origin main
---
git add .
git commit -m "add /api/posts/byUsername/:username"
git push origin main
---
git add .
git commit -m "fix router post"
git push origin main
---
git add .
git commit -m "add RestAPI l-14(p2-p4,p6[delete] post/story likes)"
git push origin main
---
git add .
git commit -m "add RestAPI l-14(p2-p3[new], p6[delete] followers)"
git push origin main
---
git add .
git commit -m "add /api/followers/byUsername/:username , /api/followed/byUsername/:username"
git push origin main
---
git add .
git commit -m "add /api/auth/users/byUsername/:username"
git push origin main
---
git add .
git commit -m "fix create followed, fix get follower and followed, add suggestions"
git push origin main
---
git add .
git commit -m "add RestAPI l-14(p2-p3,p6[delete] post/story comment)"
git push origin main
---
git add .
git commit -m "add /api/comments/byIdPostStory/:idpoststory"
git push origin main
---
git add .
git commit -m "decode.kz first commit"
git push origin main
---
git add .
git commit -m "production mode configured"
git push origin main